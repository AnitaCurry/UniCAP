<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UniCAP</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/UniCAP/</link>
    <atom:link href="http://yourdomain.com/UniCAP/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 12 Nov 2015 00:11:04 +0800</pubDate>
    <lastBuildDate>Thu, 12 Nov 2015 00:11:04 +0800</lastBuildDate>
    <generator>Jekyll v3.0.0</generator>
    
      <item>
        <title>Install UniCAP</title>
        <description>&lt;h1 id=&quot;install-unicap&quot;&gt;Install UniCAP&lt;/h1&gt;
&lt;p&gt;These are instructions for installing UniCAP.&lt;/p&gt;

&lt;h2 id=&quot;using-docker-image&quot;&gt;Using Docker Image&lt;/h2&gt;

&lt;p&gt;We provide an Docker image with the stable version of UniCAP installed. Users can deploy UniCAP using our Big Data Platform (BDP) directly with the associated Docker image.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://155.69.146.43/bdp/guest&quot;&gt;Using UniCAP in BDP&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;installing-from-source&quot;&gt;Installing From Source&lt;/h2&gt;

&lt;h3 id=&quot;span-stylecolor-greenrequirementsspan&quot;&gt;&lt;span style=&quot;color: Green&quot;&gt;Requirements&lt;/span&gt;&lt;/h3&gt;

&lt;h4 id=&quot;span-stylecolor-bluec-compilerspan&quot;&gt;&lt;span style=&quot;color: blue&quot;&gt;C++ Compiler&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;UniCAP needs a C++ compiler supporting c++11, such as gcc &amp;gt;= 4.7.2 (prefer &amp;gt;= 4.8) or llvm &amp;gt;= 3.4. You can update gcc via either downloading packages, or building from source.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Ubuntu 12.04&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install python-software-properties
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
sudo apt-get update
sudo apt-get install gcc-4.8 g++-4.8
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin gcc-4.8 50
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin g++-4.8 50
sudo update-alternatives --config gcc
sudo update-alternatives --config g++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that, check the gcc version via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gcc --version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2) Ubuntu 14.04&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ubuntu 14.04 contains gcc-4.8 in its system software system. 
Check the gcc version:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gcc --version 
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;span-stylecolor-blueboost-libraryspan&quot;&gt;&lt;span style=&quot;color: blue&quot;&gt;Boost Library&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;UniCAP needs boost library &amp;gt;= 1.54 (prefer &amp;gt;= 1.55).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Ubuntu 12.04&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can install boost via ppa in ubuntu 12.04:&lt;/p&gt;

&lt;p&gt;Add ppa:boost-latest/ppa to your system’s software sources based on the instructions in&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://launchpad.net/~boost-latest/+archive/ubuntu/ppa&quot;&gt;https://launchpad.net/~boost-latest/+archive/ubuntu/ppa&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Update your system’s software sources:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install boost 1.55:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libboost1.55-all-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2) Ubuntu 14.04&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ubuntu 14.04 contains boost1.55&lt;/p&gt;

 	sudo apt-get install libboost1.55-all-dev

&lt;hr /&gt;

&lt;h4 id=&quot;span-stylecolor-bluethriftspan&quot;&gt;&lt;span style=&quot;color: blue&quot;&gt;Thrift&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;1) Install thrift dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libevent-dev automake libtool
sudo apt-get install flex bison pkg-config libssl-dev  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2) Install thrift from source&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://mirror.nus.edu.sg/apache/thrift/0.9.2/thrift-0.9.2.tar.gz
tar zxvf thrift-0.9.2.tar.gz
cd thrift-0.9.2
./configure --without-java --without-go
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;span-stylecolor-blueglog-and-gflagsspan&quot;&gt;&lt;span style=&quot;color: blue&quot;&gt;Glog and Gflags&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;UniCAP uses glog and gflags to print log data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Ubuntu 12.04&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Install Glog&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://google-glog.googlecode.com/files/glog-0.3.3.tar.gz
tar zxvf glog-0.3.3.tar.gz
cd glog-0.3.3
./configure
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install Gflags&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://github.com/schuhschuh/gflags/archive/master.zip
unzip master.zip
cd gflags-master
mkdir build &amp;amp;&amp;amp; cd build
export CXXFLAGS=&quot;-fPIC&quot; &amp;amp;&amp;amp; cmake .. &amp;amp;&amp;amp; make VERBOSE=1
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2) Ubuntu 14.04&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;sudo apt-get install libgflags-dev libgoogle-glog-dev&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;span-stylecolor-blueleveldbspan&quot;&gt;&lt;span style=&quot;color: blue&quot;&gt;LevelDB&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;UniCAP uses LevelDB as one of its storage systems.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libleveldb-dev libsnappy-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;span-stylecolor-blueopencv2span&quot;&gt;&lt;span style=&quot;color: blue&quot;&gt;OpenCV2&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;UniCAP uses OpenCV2 run image related applications.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://github.com/Itseez/opencv/archive/2.4.11.zip
unzip 2.4.11.zip
./configure
make 
sudo make install ---
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;span-stylecolor-bluempispan&quot;&gt;&lt;span style=&quot;color: blue&quot;&gt;MPI&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;UniCAP uses MPI to parallel the application.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install libopenmpi-dev openmpi-bin openmpi-common openmpi-doc
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;span-stylecolor-bluehdfsspan&quot;&gt;&lt;span style=&quot;color: blue&quot;&gt;HDFS&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;To work with Hadoop Distributed File System using C++, there are two choices:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) libhdfs3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Libhdfs3 a native c/c++ hdfs client (there is no need to use Java to work with HDFS in application layer).&lt;/p&gt;

&lt;p&gt;Refer to &lt;a href=&quot;https://github.com/PivotalRD/libhdfs3&quot;&gt;https://github.com/PivotalRD/libhdfs3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To compile libhdfs3, users need following libraries:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install protobuf-compiler  libprotobuf-dev 
sudo apt-get install libkrb5-dev libxml2-dev libuuid1 uuid-dev 
sudo apt-get install libgsasl7 libgsasl7-dev 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2) libhdfs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Libhdfs is a JNI based C api for Hadoop’s DFS. It provides a simple subset of C apis to manipulate DFS files and the filesystem.&lt;/p&gt;

&lt;p&gt;Clients should compile libhdfs based on their HDFS version in use. To work with JNI, there are some modifications in system:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vi /etc/ld.so.conf.d/java.conf

append following configurations:

/opt/jdk1.7.0_75/jre/lib/amd64
/opt/jdk1.7.0_75/jre/lib/amd64/server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sometimes, the JNI-based application cannot find the needed jar packets for HDFS operations. Using following commands to generate a shell script, run it at the start up of the application:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;find /usr/lib/hadoop -name *.jar|awk &#39;{ printf(&quot;export CLASSPATH=%s:$CLASSPATH\n&quot;, $0); }&#39; &amp;gt;&amp;gt; hdfs_jni.sh
find /usr/lib/hadoop/lib -name *.jar|awk &#39;{ printf(&quot;export CLASSPATH=%s:$CLASSPATH\n&quot;, $0); }&#39; &amp;gt;&amp;gt; hdfs_jni.sh
find /usr/lib/hadoop-hdfs/ -name *.jar|awk &#39;{ printf(&quot;export CLASSPATH=%s:$CLASSPATH\n&quot;, $0); }&#39; &amp;gt;&amp;gt; hdfs_jni.sh
find /usr/lib/hadoop-hdfs/lib/ -name *.jar|awk &#39;{ printf(&quot;export CLASSPATH=%s:$CLASSPATH\n&quot;, $0); }&#39; &amp;gt;&amp;gt; hdfs_jni.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;span-stylecolor-greencompile-unicapspan&quot;&gt;&lt;span style=&quot;color: Green&quot;&gt;Compile UniCAP&lt;/span&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/sunpengsdu/unicap
cd unicap/build
cmake ..
make -j8
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Sat, 07 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/UniCAP/unicap/2015/11/07/install.html</link>
        <guid isPermaLink="true">http://yourdomain.com/UniCAP/unicap/2015/11/07/install.html</guid>
        
        
        <category>unicap</category>
        
      </item>
    
      <item>
        <title>index</title>
        <description>&lt;h1 id=&quot;span-stylecolor-4499eeunicap-a-unified-computing-engine-for-fast-data-processingspan&quot;&gt;&lt;span style=&quot;color: #4499ee&quot;&gt;UniCAP: A Unified Computing Engine for Fast Data Processing&lt;/span&gt;&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;The UniCAP project is a distributed computing engine for executing data parallel programmes, which consist of a complex of  directed-acyclic-graph (DAG) of tasks. It unifies &lt;em&gt;Batch Processing&lt;/em&gt; and &lt;em&gt;Stream Processing&lt;/em&gt; into one system using a &lt;strong&gt;timed dataflow model&lt;/strong&gt;. Clients can either use UniCAP in NTU &lt;a href=&quot;http://155.69.146.43/bdp&quot;&gt;Big Data Platform (BDP)&lt;/a&gt;, or build from source codes.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;    
&amp;lt;img src=&quot;http://cap-ntu.github.io/UniCAP/img/unicap_sys.jpg&quot; width = &quot;500&quot; align=center /&amp;gt;
&lt;/div&gt;

&lt;p&gt;The main design themes for UniCAP are:&lt;/p&gt;

&lt;h2 id=&quot;span-stylecolor-43a102timed-dataflowspan&quot;&gt;&lt;span style=&quot;color: #43a102&quot;&gt;Timed Dataflow&lt;/span&gt;&lt;/h2&gt;
</description>
        <pubDate>Sat, 07 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/UniCAP/unicap/2015/11/07/index.html</link>
        <guid isPermaLink="true">http://yourdomain.com/UniCAP/unicap/2015/11/07/index.html</guid>
        
        
        <category>unicap</category>
        
      </item>
    
      <item>
        <title>Getting Started</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 07 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/UniCAP/unicap/2015/11/07/getting-started.html</link>
        <guid isPermaLink="true">http://yourdomain.com/UniCAP/unicap/2015/11/07/getting-started.html</guid>
        
        
        <category>unicap</category>
        
      </item>
    
      <item>
        <title>Example</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 07 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/UniCAP/unicap/2015/11/07/example.html</link>
        <guid isPermaLink="true">http://yourdomain.com/UniCAP/unicap/2015/11/07/example.html</guid>
        
        
        <category>unicap</category>
        
      </item>
    
      <item>
        <title>Document</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 07 Nov 2015 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/UniCAP/unicap/2015/11/07/document.html</link>
        <guid isPermaLink="true">http://yourdomain.com/UniCAP/unicap/2015/11/07/document.html</guid>
        
        
        <category>unicap</category>
        
      </item>
    
  </channel>
</rss>
